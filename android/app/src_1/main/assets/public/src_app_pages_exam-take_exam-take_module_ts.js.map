{"version":3,"sources":["./src/app/pages/exam-take/exam-take-routing.module.ts","./src/app/pages/exam-take/exam-take.module.ts","./src/app/pages/exam-take/exam-take.page.ts","./src/app/pages/exam-take/exam-take.page.scss","./src/app/pages/exam-take/exam-take.page.html"],"names":[],"mappings":"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","file":"src_app_pages_exam-take_exam-take_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExamTakePage } from './exam-take.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExamTakePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamTakePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExamTakePageRoutingModule } from './exam-take-routing.module';\n\nimport { ExamTakePage } from './exam-take.page';\nimport { ExpandableComponent } from '../../components/expandable/expandable.component';\nimport { MathjaxDirective } from '../../directives/mathjax.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExamTakePageRoutingModule\n  ],\n  declarations: [ExamTakePage, ExpandableComponent, MathjaxDirective]\n})\nexport class ExamTakePageModule {}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PreferenceService } from 'src/app/services/preference.service';\nimport { Storage } from '@capacitor/storage';\nimport { AlertController, NavController } from '@ionic/angular';\n@Component({\n  selector: 'app-exam-take',\n  templateUrl: './exam-take.page.html',\n  styleUrls: ['./exam-take.page.scss'],\n})\nexport class ExamTakePage implements OnInit {\n  time: BehaviorSubject<string> = new BehaviorSubject('00:00:00');\n  token: any;\n  examData: any;\n  isLoading = true;\n  examSubjects = [];\n  examTime: any;\n  paperTime: any;\n  exmHeader: any;\n  quesData = [];\n  selectedAnser: any;\n  multianswers = [];\n  updatedTime: any;\n  answerSubmited = false;\n  data: any;\n  quetsIndexArray = [];\n  examAsnwer = {\n    candidateId: 0,\n    quesPaperCriteriaID: 0,\n    examEnrollmentDetailsID: 0,\n    questionID: 0,\n    qpAttemtedAnswerTableType: \"\",\n    duration: 0,\n    completionStatus: ''\n  };\n  constructor(public router: Router, public alertController: AlertController, public navCtrl: NavController, public api: AuthService, public prefs: PreferenceService) {\n    Storage.get({ key: 'examSubjData' }).then(res => {\n      this.data = JSON.parse(res.value);\n    });\n\n\n\n  }\n\n  ngOnInit() {\n    this.prefs.getUserToken().then(tkn => {\n      this.token = tkn.value;\n      this.prefs.getExamData().then((exms: any) => {\n        this.examData = JSON.parse(exms.value);\n        this.getExamQuets(tkn.value, this.data.subId, this.data.examtime * 60)\n\n      })\n    });\n  }\n  getExamQuets(token, subId, timer) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n      })\n    };\n\n    this.api.getData(`/api/Exam/GetExamQARealtimeOneByOne/${this.examData.examEnrolDetail}/${this.examData.candId}/${subId}/1/${timer}`, httpOptions).subscribe((ques: any) => {\n      console.log(ques);\n      this.exmHeader = ques.examHeader;\n      this.quesData = ques.questionAnswerData;\n      this.quetsIndexArray = ques.subjectWiseQuestionsAttempted;\n      this.getSelectAnswer();\n      this.startTimer(timer);\n      this.isLoading = false;\n    });\n\n  }\n\n  getSelectAnswer() {\n    this.quesData.forEach((ansr, idx) => {\n      if (ansr.attemptedAnswerFlg == 1) {\n        this.selectedAnser = ansr;\n      }\n      if (this.quesData[0].attemptedAnswerFlg != 1) {\n        this.quetsIndexArray[0].isQuestionVisited = 1;\n      }\n    });\n  }\n  startTimer(dur: number) {\n    this.examTime = dur;\n    setInterval(() => {\n      this.updateTimeVal();\n    }, 1000);\n  }\n\n  updateTimeVal() {\n    let hours: any = Math.floor(this.examTime / 60 / 60);\n    let minutes: any = Math.floor(this.examTime / 60) - (hours * 60);\n    let seconds: any = this.examTime % 60;\n    const text = hours + ':' + minutes + ':' + seconds;\n    this.time.next(text);\n    this.examTime--;\n\n    if (this.examTime == 0) {\n      this.examSubmission();\n      this.navCtrl.pop();\n      this.router.navigate(['/home']);\n    }\n  }\n  nextQue(quesNum) {\n    if (quesNum == this.data.numberOfQues) {\n      return;\n    }\n    quesNum = quesNum + 1;\n    this.submitAnswer(quesNum, 'I', 'queNav');\n  }\n\n  prevQue(ques) {\n    if (ques == 1) {\n      return;\n    }\n    ques = ques - 1;\n    this.submitAnswer(ques, 'I', 'queNav');\n  }\n  getAnswer(e) {\n    this.examAsnwer.qpAttemtedAnswerTableType = e.detail.value.answerID.toString();\n  }\n\n  getAnswerCheck(e) {\n    const isChecked = e.detail.checked;\n\n    if (isChecked) {\n      this.multianswers.push(e.detail.value.answerID);\n    } else {\n      this.multianswers = this.multianswers.filter(ans => ans != e.detail.value);\n    }\n    this.examAsnwer.qpAttemtedAnswerTableType = this.multianswers.join();\n  }\n\n  submitAnswer(seq, comStatus, navType) {\n    this.isLoading = false;\n\n    if (this.examAsnwer.qpAttemtedAnswerTableType == '') {\n      this.checkVisit(seq);\n      return;\n    }\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.token\n      })\n    };\n\n    this.examAsnwer.candidateId = this.examData.candId;\n    this.examAsnwer.examEnrollmentDetailsID = this.examData.examEnrolDetail;\n    this.examAsnwer.duration = this.examTime;\n    this.examAsnwer.questionID = this.quesData[0].questionId;\n    this.examAsnwer.quesPaperCriteriaID = this.exmHeader.questionPaperCriteriaID;\n    this.examAsnwer.completionStatus = comStatus;\n    this.api.postData('/api/Exam/exam/insertexamquestionanswer', this.examAsnwer, httpOptions).subscribe((res: any) => {\n      console.log(res);\n      if (res.statusCode == 201) {\n        this.examAsnwer.qpAttemtedAnswerTableType = '';\n\n        this.getAnswerColor(seq - 1);\n\n        if (navType == 'queNav') {\n          this.checkVisit(seq);\n        }\n        this.isLoading = true;\n      }\n    });\n  }\n\n  submitAnswerGenericFlg(seq, comStatus) {\n    this.isLoading = false;\n    // if (this.examAsnwer.qpAttemtedAnswerTableType == '') {\n    //   this.checkVisit(seq);\n    //   return;\n    // }\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.token\n      })\n    };\n\n    this.examAsnwer.candidateId = this.examData.candId;\n    this.examAsnwer.examEnrollmentDetailsID = this.examData.examEnrolDetail;\n    this.examAsnwer.duration = this.examTime;\n    this.examAsnwer.questionID = this.quesData[0].questionId;\n    this.examAsnwer.quesPaperCriteriaID = this.exmHeader.questionPaperCriteriaID;\n    this.examAsnwer.completionStatus = comStatus;\n    this.api.postData('/api/Exam/exam/insertexamquestionanswer', this.examAsnwer, httpOptions).subscribe((res: any) => {\n      console.log(res);\n      if (res.statusCode == 201) {\n        this.examAsnwer.qpAttemtedAnswerTableType = '';\n        this.getAnswerColor(seq);\n        this.isLoading = true;\n\n        location.reload();\n        this.router.navigate(['/home']);\n      }\n    });\n  }\n\n  // switchQue(qNum) {\n  //   // this.checkVisit(index, false);\n  //   this.switchQues(qNum);\n  // }\n\n  checkVisit(queSeq) {\n    this.quetsIndexArray.map((val, idx) => {\n      if (val.questionSequence === queSeq) {\n        this.switchQues(queSeq);\n        val.isQuestionVisited = 1;\n\n      }\n\n    });\n  }\n  getAnswerColor(queSeq) {\n    this.quetsIndexArray.map((val, idx) => {\n      if (val.questionSequence === queSeq) {\n        this.switchQues(queSeq);\n        val.isAttempted = 1;\n      }\n\n    });\n  }\n  switchQues(quesNum) {\n    this.isLoading = true;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + this.token\n      })\n    };\n\n    this.api.getData(`/api/Exam/GetExamQARealtimeOneByOne/${this.examData.examEnrolDetail}/${this.examData.candId}/${this.data.subId}/${quesNum}/${this.examTime}`, httpOptions).subscribe((ques: any) => {\n      console.log(ques);\n      this.quesData = ques.questionAnswerData;\n      this.getSelectAnswer();\n      this.isLoading = false;\n\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  async submitRes() {\n    const alert = await this.alertController.create({\n\n      header: 'Confirm!',\n      message: 'Please ensure you have attempted all questions before submit',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n            this.examSubmission();\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n\n\n  }\n\n\n  examSubmission() {\n    const id = this.examData.qpResultId;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.token\n      })\n    };\n\n    this.examAsnwer.candidateId = this.examData.candId;\n    this.examAsnwer.examEnrollmentDetailsID = this.examData.examEnrolDetail;\n    this.examAsnwer.duration = this.examTime;\n    this.examAsnwer.questionID = this.quesData[0].questionId;\n    this.examAsnwer.quesPaperCriteriaID = this.exmHeader.questionPaperCriteriaID;\n    this.examAsnwer.completionStatus = 'C';\n    console.log(this.examAsnwer);\n    // this.checkVisit(seq - 1, true);\n\n    this.api.postData('/api/Exam/exam/insertexamquestionanswer', this.examAsnwer, httpOptions).subscribe((res: any) => {\n      console.log(res);\n      if (res.statusCode == 201) {\n        this.examAsnwer.qpAttemtedAnswerTableType = '';\n        this.router.navigate(['/exam-result', id]);\n      }\n\n    });\n\n  }\n\n}\n","export default \".ques-text {\\n  display: block;\\n  font-size: 16px;\\n  color: black;\\n  --ion-font-family: -apple-system, BlinkMacSystemFont, 'Montserrat','Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue' !important;\\n}\\n\\nion-img {\\n  margin-top: 10px;\\n  height: 120px;\\n  width: 120px;\\n}\\n\\n.nxt-btn {\\n  float: right;\\n}\\n\\n.exam-timer {\\n  margin-right: 75px;\\n  font-size: 15px;\\n  color: red;\\n}\\n\\n.quesNavigate {\\n  border-radius: 100px;\\n  border: 1px solid black;\\n  font-size: 14px;\\n  text-align: center;\\n}\\n\\n.quesNavigateActive {\\n  border-radius: 100px;\\n  border: 1px solid white;\\n  font-size: 14px;\\n  text-align: center;\\n  background-color: green;\\n  color: white;\\n}\\n\\n.quesNavigatevisit {\\n  border-radius: 100px;\\n  border: 1px solid white;\\n  font-size: 14px;\\n  text-align: center;\\n  background-color: grey;\\n  color: white;\\n}\\n\\nion-col.quesNavigate {\\n  margin: 5px 0px 0px 9px;\\n}\\n\\nion-grid.action-btns {\\n  margin-top: 25px;\\n}\\n\\nion-grid.action-btns ion-row ion-col ion-button {\\n  max-width: 65px;\\n}\\n\\nion-radio {\\n  margin: 22px 7px -3px 0px;\\n  display: inline-block;\\n}\\n\\n.anser-img {\\n  height: 58px;\\n  width: 100%;\\n  margin-left: 15px;\\n}\\n\\n.answer-text {\\n  display: block;\\n  font-size: 16px;\\n  color: black;\\n  --ion-font-family: -apple-system, BlinkMacSystemFont, 'Montserrat','Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue' !important;\\n}\\n\\nion-card {\\n  --background: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW0tdGFrZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsZUFBZTtFQUNmLFlBQVk7RUFDWiwwSkFBa0I7QUFDdEI7O0FBQ0E7RUFDSSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLFlBQVk7QUFFaEI7O0FBQ0E7RUFDSSxZQUFZO0FBRWhCOztBQUFBO0VBQ0ksa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixVQUFVO0FBR2Q7O0FBREE7RUFDSSxvQkFBb0I7RUFDcEIsdUJBQXVCO0VBQ3RCLGVBQWU7RUFDZixrQkFBa0I7QUFJdkI7O0FBREE7RUFDSSxvQkFBb0I7RUFDcEIsdUJBQXVCO0VBQ3RCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLFlBQVk7QUFJakI7O0FBREE7RUFDSSxvQkFBb0I7RUFDcEIsdUJBQXVCO0VBQ3RCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7QUFJakI7O0FBQUE7RUFDSSx1QkFBdUI7QUFHM0I7O0FBQUE7RUFDSSxnQkFBZ0I7QUFHcEI7O0FBSkE7RUFLWSxlQUFlO0FBRzNCOztBQUVBO0VBQ0kseUJBQXlCO0VBQ3pCLHFCQUFxQjtBQUN6Qjs7QUFDQTtFQUNJLFlBQVk7RUFDWixXQUFXO0VBQ1gsaUJBQWlCO0FBRXJCOztBQUFBO0VBS0ksY0FBYztFQUNkLGVBQWU7RUFDZixZQUFZO0VBQ1osMEpBQWtCO0FBRHRCOztBQUlBO0VBQ0ksbUJBQWE7QUFEakIiLCJmaWxlIjoiZXhhbS10YWtlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5xdWVzLXRleHR7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGNvbG9yOiBibGFjaztcbiAgICAtLWlvbi1mb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnTW9udHNlcnJhdCcsJ1NlZ29lIFVJJywgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCAnT3BlbiBTYW5zJywgJ0hlbHZldGljYSBOZXVlJyAhaW1wb3J0YW50O1xufVxuaW9uLWltZyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBoZWlnaHQ6IDEyMHB4O1xuICAgIHdpZHRoOiAxMjBweDtcbn1cblxuLm54dC1idG4ge1xuICAgIGZsb2F0OiByaWdodDtcbn1cbi5leGFtLXRpbWVyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDc1cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGNvbG9yOiByZWQ7XG59XG4ucXVlc05hdmlnYXRlIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbn1cbi5xdWVzTmF2aWdhdGVBY3RpdmUge1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG4gICAgIGNvbG9yOiB3aGl0ZTtcblxufVxuLnF1ZXNOYXZpZ2F0ZXZpc2l0IHtcbiAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcbiAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG4gICAgIGNvbG9yOiB3aGl0ZTtcblxufVxuXG5pb24tY29sLnF1ZXNOYXZpZ2F0ZSB7XG4gICAgbWFyZ2luOiA1cHggMHB4IDBweCA5cHg7XG59XG5cbmlvbi1ncmlkLmFjdGlvbi1idG5zIHtcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xuICBpb24tcm93e1xuICAgICAgaW9uLWNvbCB7XG4gICAgICAgIGlvbi1idXR0b24ge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA2NXB4O1xuICAgICAgICB9XG4gICAgICB9XG4gIH0gIFxufVxuaW9uLXJhZGlvIHtcbiAgICBtYXJnaW46IDIycHggN3B4IC0zcHggMHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5hbnNlci1pbWcge1xuICAgIGhlaWdodDogNThweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcbn1cbi5hbnN3ZXItdGV4dHtcbiAgICAvLyBtYXJnaW4tbGVmdDogMTJweDtcbiAgICAvLyBmb250LXNpemU6IDE0cHg7XG4gICAgLy8gZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIC8vIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIC0taW9uLWZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdNb250c2VycmF0JywnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1jYXJkIHtcbiAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <!-- <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/exam-info\\\"></ion-back-button>\\n    </ion-buttons> -->\\n    <ion-title *ngIf=\\\"quesData.length > 0\\\">\\n      {{quesData[0].subjectName}}\\n    </ion-title>\\n\\n    <ion-title slot=\\\"end\\\" *ngIf=\\\"exmHeader\\\"> <span class=\\\"exam-timer\\\" *ngIf=\\\"examTime\\\">{{time | async}}</span>\\n      <span>{{quesData[0].questionSequence}} / {{this.data.numberOfQues}}</span>\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div class=\\\"ion-padding-start\\\" *ngIf=\\\"examSubjects\\\">\\n\\n    <ion-spinner style=\\\"margin-left: 50%;\\\" *ngIf=\\\"isLoading\\\"></ion-spinner>\\n    <ion-card class=\\\"ion-padding\\\" *ngIf=\\\"quesData.length > 0 && !isLoading\\\">\\n      <ion-label class=\\\"ques-text\\\" [appMathjax]=\\\"quesData[0].questionText\\\">\\n      Q. {{quesData[0].questionText}}\\n      </ion-label>\\n      <ion-img *ngIf=\\\"quesData[0].questionImage\\\" [src]=\\\"quesData[0].questionImage\\\" style=\\\"height: 80%; width: 80%;\\\"></ion-img>\\n      <ion-radio-group *ngIf=\\\"quesData[0].correctAnswerCount == 1\\\" [value]=\\\"selectedAnser\\\"\\n        (ionChange)=\\\"getAnswer($event)\\\">\\n        <ion-item lines=\\\"none\\\" *ngFor=\\\"let que of quesData\\\">\\n\\n\\n\\n          <div *ngIf=\\\"que.displayBothQandIFlg\\\">\\n\\n\\n            <ion-radio [value]=\\\"que\\\"></ion-radio>\\n\\n            <ion-text style=\\\"display: inline-block;\\\">{{que.seqOfAnswerText}}:</ion-text>\\n            <ion-label *ngIf=\\\"que.answerText\\\" class=\\\"answer-text\\\" [appMathjax]=\\\"que.answerText\\\">\\n              {{que.answerText}}\\n            </ion-label>\\n\\n            <img *ngIf=\\\"que.answerImage\\\"  [src]=\\\"que.answerImage\\\" />\\n\\n          </div>\\n          <div *ngIf=\\\"!que.displayBothQandIFlg\\\">\\n\\n\\n            <ion-radio [value]=\\\"que\\\"></ion-radio>\\n            <ion-text style=\\\"display: inline-block;font-size: 14px;\\\">{{que.seqOfAnswerText}}:</ion-text>\\n\\n            <ion-label *ngIf=\\\"que.answerText\\\" class=\\\"answer-text\\\" [appMathjax]=\\\"que.answerText\\\" text-wrap>\\n              {{que.answerText}}\\n            </ion-label>\\n\\n            <img *ngIf=\\\"que.answerImage\\\" class=\\\"anser-img\\\" [src]=\\\"que.answerImage\\\" />\\n\\n          </div>\\n\\n\\n\\n\\n        </ion-item>\\n\\n      </ion-radio-group>\\n      <ion-list *ngIf=\\\"quesData[0].correctAnswerCount > 1\\\">\\n        <ion-item lines=\\\"none\\\" *ngFor=\\\"let que of quesData\\\">\\n          <div *ngIf=\\\"que.displayBothQandIFlg\\\">\\n\\n\\n            <ion-checkbox [value]=\\\"que\\\" (ionChange)=\\\"getAnswerCheck($event)\\\">\\n\\n            </ion-checkbox>\\n            <ion-text style=\\\"display: inline-block;\\\">{{que.seqOfAnswerText}}:</ion-text>\\n            <ion-label *ngIf=\\\"que.answerText\\\" class=\\\"answer-text\\\" [appMathjax]=\\\"que.answerText\\\" text-wrap>\\n              {{que.answerText}}\\n            </ion-label>\\n\\n            <img *ngIf=\\\"que.questionImage\\\" class=\\\"anser-img\\\" [src]=\\\"que.questionImage\\\" />\\n          </div>\\n          <div *ngIf=\\\"!que.displayBothQandIFlg\\\">\\n\\n\\n            <ion-checkbox [value]=\\\"que\\\" (ionChange)=\\\"getAnswerCheck($event)\\\">\\n\\n            </ion-checkbox>\\n            <ion-text style=\\\"display: inline-block;\\\">{{que.seqOfAnswerText}}:</ion-text>\\n            <ion-label *ngIf=\\\"que.answerText\\\" class=\\\"answer-text\\\" [appMathjax]=\\\"que.answerText\\\">\\n              {{que.answerText}}\\n            </ion-label>\\n\\n            <img *ngIf=\\\"que.questionImage\\\" class=\\\"anser-img\\\" [src]=\\\"que.questionImage\\\" />\\n          </div>\\n        </ion-item>\\n      </ion-list>\\n      <ion-grid class=\\\"ion-no-padding action-btns\\\">\\n        <ion-row class=\\\"ion-no-padding\\\">\\n          <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n            <ion-button (click)=\\\"prevQue(quesData[0].questionSequence)\\\">\\n              <ion-icon name=\\\"caret-back-outline\\\"></ion-icon>\\n              Prev\\n            </ion-button>\\n          </ion-col>\\n          <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n            <ion-button (click)=\\\"nextQue(quesData[0].questionSequence)\\\">Next\\n\\n              <ion-icon name=\\\"caret-forward-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <!-- <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n            <ion-button [disabled]=\\\"this.examAsnwer.qpAttemtedAnswerTableType == null\\\"\\n              (click)=\\\"submitAnswer(quesData[0].questionSequence+1, 'I', 'numSeq')\\\">Save</ion-button>\\n\\n          </ion-col> -->\\n          <ion-col *ngIf=\\\"!this.exmHeader.genericQPFlag\\\" class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n            <ion-button [disabled]=\\\"this.examAsnwer.qpAttemtedAnswerTableType == null\\\"\\n              (click)=\\\"submitAnswerGenericFlg(quesData[0].questionSequence, 'I')\\\">Exit</ion-button>\\n\\n          </ion-col>\\n          <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n            <ion-button (click)=\\\"submitRes()\\\">\\n              Submit\\n            </ion-button>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n\\n      <!-- <div class=\\\"ion-text-center\\\">\\n        <ion-button routerLink=\\\"/home\\\" routerDirection=\\\"back\\\">Save\\n          for later</ion-button>\\n      </div> -->\\n    </ion-card>\\n\\n    <ion-grid>\\n      <ion-row class=\\\"ques-panel\\\">\\n        <!-- <ion-col class=\\\"quesNavigate\\\" size=\\\"2\\\" *ngFor=\\\"let queNum of quetsIndexArray; let i = index\\\"\\n          (click)=\\\"switchQue(queNum.ques, i)\\\"\\n          [ngClass]=\\\"[queNum.backColor == 'red' ? 'quesNavigatevisit' : '',  queNum.backColor == 'green' ? 'quesNavigateActive' : '', queNum.backColor == 'white' ? 'quesNavigate' : '', selectedAnser.]\\\"\\n          > -->\\n        <ion-col class=\\\"quesNavigate\\\" size=\\\"2\\\" *ngFor=\\\"let queNum of quetsIndexArray;\\\"\\n          (click)=\\\"checkVisit(queNum.questionSequence)\\\"\\n          [ngClass]=\\\"[queNum.isAttempted == '1' ? 'quesNavigateActive' : '', queNum.isQuestionVisited == '1' && queNum.isAttempted == '0' ? 'quesNavigatevisit' : '']\\\">\\n          {{queNum.questionSequence}}\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n\\n</ion-content>\";"],"sourceRoot":"webpack:///"}