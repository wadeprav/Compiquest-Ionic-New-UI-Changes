{"version":3,"sources":["./src/app/pages/exam-info/exam-info-routing.module.ts","./src/app/pages/exam-info/exam-info.module.ts","./src/app/pages/exam-info/exam-info.page.ts","./src/app/pages/exam-info/exam-info.page.scss","./src/app/pages/exam-info/exam-info.page.html"],"names":[],"mappings":"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","file":"src_app_pages_exam-info_exam-info_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExamInfoPage } from './exam-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExamInfoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamInfoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExamInfoPageRoutingModule } from './exam-info-routing.module';\n\nimport { ExamInfoPage } from './exam-info.page';\nimport { ExpandableComponent } from 'src/app/components/expandable/expandable.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExamInfoPageRoutingModule\n  ],\n  declarations: [ExamInfoPage, ExpandableComponent]\n})\nexport class ExamInfoPageModule {}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PreferenceService } from 'src/app/services/preference.service';\nimport { Storage } from '@capacitor/storage';\n@Component({\n  selector: 'app-exam-info',\n  templateUrl: './exam-info.page.html',\n  styleUrls: ['./exam-info.page.scss'],\n})\nexport class ExamInfoPage implements OnInit {\n  examSubjects = [];\n  isLoading = true;\n  exdata: any;\n  resumeExamData: any;\n  startExamData: any;\n  constructor(public api: AuthService, public prefs: PreferenceService, public router: Router) {\n\n\n    this.prefs.getExamData().then((res) => {\n      this.exdata = JSON.parse(res.value);\n      console.log(this.exdata);\n    })\n  }\n  ionViewDidEnter() {\n    console.log('did');\n\n  }\n  ngOnInit() {\n\n  }\n  ionViewWillEnter() {\n    this.prefs.getUserToken().then((token: any) => {\n      this.getExamDetail(token.value);\n      if (this.exdata) {\n        this.getResumeExamInfo(token.value);\n      }\n    });\n  }\n\n  getExamDetail(token) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    if (this.exdata) {\n      this.api.getData(`/api/Exam/GetCandidateStartExamDetails/${this.exdata.examEnrolDetail}/${this.exdata.candId}/${this.exdata.subjId}`, httpOptions).subscribe((res: any) => {\n        console.log(res);\n        this.examSubjects = res.examDetailsSubjectWise;\n        this.startExamData = res.examDetailsHeader;\n        this.isLoading = false;\n      }, (error) => {\n        alert(error);\n        this.isLoading = false;\n      });\n    }\n  }\n\n  expandContent(idx) {\n    this.examSubjects.map((val, idex) => {\n      if (idx === idex) {\n        val.toggle = !val.toggle;\n      }\n\n    });\n\n  }\n\n  gotoExamTake(subId, mins, numbsOfQue) {\n    Storage.remove({ key: 'examSubjData' });\n    const examData = {\n      subId: subId,\n      examtime: mins,\n      numberOfQues: numbsOfQue\n    }\n    Storage.set({ key: 'examSubjData', value: JSON.stringify(examData) });\n    this.router.navigate(['/exam-take']);\n  }\n\n  getResumeExamInfo(token) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    if (this.exdata) {\n      this.api.getData(`/api/Exam/GetOCResumeExamDetails/${this.exdata.examEnrolDetail}/${this.exdata.candId}/${this.exdata.subjId}`, httpOptions).subscribe((res: any) => {\n        this.resumeExamData = res;\n        console.log(this.resumeExamData);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n\n  Cancel() {\n    location.reload();\n    this.router.navigate(['/home']);\n  }\n}\n","export default \"ion-col {\\n  padding: 10px;\\n  border: 1px solid darkgrey;\\n}\\n\\n.exam-det-header {\\n  margin: 20px 20px;\\n  font-size: 15px;\\n  font-weight: 500;\\n}\\n\\nion-label, ion-text {\\n  color: white;\\n}\\n\\nion-card {\\n  box-shadow: 0 4px 8px 0 #ece9e9d1, 0 6px 20px 0 #b1a5a570;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW0taW5mby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsMEJBQTBCO0FBQzlCOztBQUNBO0VBQ0ksaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixnQkFBZ0I7QUFFcEI7O0FBQUE7RUFDSSxZQUFZO0FBR2hCOztBQUNBO0VBQ0UseURBQXlEO0FBRTNEIiwiZmlsZSI6ImV4YW0taW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29sIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtncmV5O1xufVxuLmV4YW0tZGV0LWhlYWRlcntcbiAgICBtYXJnaW46IDIwcHggMjBweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbmlvbi1sYWJlbCwgaW9uLXRleHQge1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cblxuXG5pb24tY2FyZHtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgI2VjZTllOWQxLCAwIDZweCAyMHB4IDAgI2IxYTVhNTcwO1xuXG4gIH0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <!-- <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons> -->\\n    <ion-title>\\n      Exam Information\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"isLoading\\\" class=\\\"ion-text-center\\\" style=\\\"margin-top: 50px;\\\">\\n    <ion-spinner></ion-spinner>\\n  </div>\\n  <div>\\n    <p class=\\\"exam-det-header\\\">\\n      Exam Details\\n    </p>\\n    <ion-card class=\\\"ion-margin\\\" *ngIf=\\\"resumeExamData\\\">\\n      <ion-grid *ngIf=\\\"resumeExamData.resumeExamSubjectDetails\\\">\\n\\n        <ion-row>\\n          <ion-col size=\\\"7\\\">\\n            <ion-label>Total Questions:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"5\\\">\\n            <ion-text>{{resumeExamData.resumeExamSubjectDetails.noOfQuestions}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"7\\\">\\n            <ion-label>Attempted Questions</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-text>{{resumeExamData.resumeExamSubjectDetails.attemptedQcount}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"7\\\">\\n            <ion-label>UnAttempted Questions</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-text>{{resumeExamData.resumeExamSubjectDetails.unAttemptedQcount}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"7\\\">\\n            <ion-label>Negative Marks Per Questions</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-text>{{resumeExamData.resumeExamSubjectDetails.negativeMarksPerQues}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card>\\n\\n  </div>\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"examSubjects\\\">\\n    <div *ngFor=\\\"let exam of examSubjects; let i = index\\\">\\n      <ion-item *ngIf=\\\"resumeExamData\\\">\\n        <ion-label (click)=\\\"expandContent(i)\\\">{{exam.subjectName}}</ion-label>\\n        <ion-button *ngIf=\\\"!resumeExamData.resumeExamHeader\\\"\\n          (click)=\\\"gotoExamTake(exam.subjectID, startExamData.durationMins, exam.noOfQuestions)\\\">\\n          {{exdata.isExamAppeared == true ? 'Resume Exam' :\\n          'Start Exam'}}\\n        </ion-button>\\n        <ion-button *ngIf=\\\"resumeExamData.resumeExamHeader\\\"\\n          [disabled]=\\\"!resumeExamData.resumeExamHeader.isExamCompleted == 'I'\\\"\\n          (click)=\\\"gotoExamTake(exam.subjectID, resumeExamData.resumeExamHeader.durationMins/60, exam.noOfQuestions)\\\">\\n          {{resumeExamData.resumeExamHeader.isExamAppeared == true ? 'Resume Exam' :\\n          'Start Exam'}}\\n        </ion-button>\\n        <!-- <ion-button *ngIf=\\\"!resumeExamData.resumeExamHeader\\\"\\n          (click)=\\\"gotoExamTake(exam.subjectID, startExamData.durationMins, exam.noOfQuestions)\\\">\\n          {{resumeExamData.resumeExamHeader.isExamAppeared == true ? 'Resume Exam' :\\n          'Start Exam'}}\\n        </ion-button>\\n        <ion-button *ngIf=\\\"resumeExamData.resumeExamHeader\\\"\\n          (click)=\\\"gotoExamTake(exam.subjectID, resumeExamData.resumeExamHeader.durationMins/60, exam.noOfQuestions)\\\">\\n          {{resumeExamData.resumeExamHeader.isExamAppeared == true ? 'Resume Exam' :\\n          'Start Exam'}}\\n        </ion-button> -->\\n        <ion-icon *ngIf=\\\"exam.toggle == false\\\" name=\\\"add-outline\\\"></ion-icon>\\n        <ion-icon *ngIf=\\\"exam.toggle == true\\\" name=\\\"remove-outline\\\"></ion-icon>\\n      </ion-item>\\n\\n      <app-expandable [expanded]=\\\"exam.toggle == true\\\" expandHeight=\\\"500px\\\">\\n\\n        <ion-card>\\n          <ion-grid>\\n\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label>Subject</ion-label>\\n              </ion-col>\\n              <ion-col size=\\\"5\\\">\\n                <ion-text>{{exam.subjectName}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label>No Of Questions</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.noOfQuestions}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label>Marks</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.maximumMarksPerSubject}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label>-Ve Marks</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.negativeMarksPerQues}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label>Paper No</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.subjectID}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label> Duration Mins</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.subDurationMins}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label>Marks Per Question</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.marksPerQuestion}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label> Part of Question Paper</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-text>{{exam.partOfQuestionPaper}}</ion-text>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col *ngIf=\\\"resumeExamData\\\">\\n                <!-- <ion-button (click)=\\\"gotoExamTake(exam.subjectID, exam.subDurationMins, exam.noOfQuestions)\\\">\\n                  {{data.isAppeared == true ? 'Resume Exam' :\\n                  'Start Exam'}}\\n                </ion-button> -->\\n\\n\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-card>\\n\\n\\n\\n      </app-expandable>\\n    </div>\\n\\n  </div>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}